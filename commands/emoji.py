# -*- coding: utf-8 -*-
from line2.models.command import Command, Parameter, ParameterType, CommandResult, CommandResultType
from random import random, randint
from line2.utils import IsEmpty, AddReverseDict
from re import compile, DOTALL, IGNORECASE, sub

emojiDict = {
    '#' : (4, ['􂤁􀅅#􏿿','􂠁􀅅#􏿿','􂜁􀅅#􏿿','􂘁􀅅#􏿿']),
    '*' : (8, ['􂤁􀅋*􏿿','􂤁􀅌*􏿿','􂜁􀅋*􏿿','􂘁􀅌*􏿿','􂜁􀅌*􏿿','􂠁􀅋*􏿿','􂘁􀅋*􏿿','􂠁􀅌*􏿿']),
    '0' : (3, ['􂠁􀄾0􏿿','􂘁􀄾0􏿿','􂤁􀄾0􏿿']),
    '1' : (4, ['􂘁􀄵1􏿿','􂤁􀄵1􏿿','􂠁􀄵1􏿿','􂜁􀄵1􏿿']),
    '2' : (4, ['􂠁􀄶2􏿿','􂤁􀄶2􏿿','􂜁􀄶2􏿿','􂘁􀄶2􏿿']),
    '3' : (4, ['􂜁􀄷3􏿿','􂤁􀄷3􏿿','􂠁􀄷3􏿿','􂘁􀄷3􏿿']),
    '4' : (4, ['􂤁􀄸4􏿿','􂠁􀄸4􏿿','􂜁􀄸4􏿿','􂘁􀄸4􏿿']),
    '5' : (4, ['􂤁􀄹5􏿿','􂠁􀄹5􏿿','􂜁􀄹5􏿿','􂘁􀄹5􏿿']),
    '6' : (4, ['􂤁􀄺6􏿿','􂠁􀄺6􏿿','􂜁􀄺6􏿿','􂘁􀄺6􏿿']),
    '7' : (4, ['􂤁􀄻7􏿿','􂠁􀄻7􏿿','􂜁􀄻7􏿿','􂘁􀄻7􏿿']),
    '8' : (4, ['􂤁􀄼8􏿿','􂜁􀄼8􏿿','􂘁􀄼8􏿿','􂠁􀄼8􏿿']),
    '9' : (4, ['􂤁􀄽9􏿿','􂠁􀄽9􏿿','􂜁􀄽9􏿿','􂘁􀄽9􏿿']),
    'a' : (4, ['􂠁􀄛a􏿿','􂜁􀄛a􏿿','􂘁􀄛a􏿿','􂤁􀄛a􏿿']),
    'A' : (8, ['􂜁􀅻a􏿿','􂘁􀅻a􏿿','􂠁􀄁a􏿿','􂜁􀄁a􏿿','􂘁􀄁a􏿿','􂤁􀅻a􏿿','􂤁􀄁a􏿿', '􂠁􀅻a􏿿']),
    'b' : (4, ['􂠁􀄜b􏿿','􂘁􀄜b􏿿','􂤁􀄜b􏿿','􂜁􀄜b􏿿']),
    'B' : (8, ['􂤁􀅷b􏿿','􂤁􀄂b􏿿','􂠁􀅷b􏿿','􂠁􀄂b􏿿','􂜁􀅷b􏿿','􂜁􀄂b􏿿','􂘁􀅷b􏿿','􂘁􀄂b􏿿']),
    'c' : (8, ['􂠁􀄝c􏿿','􂜁􀄝c􏿿','􂘁􀄝c􏿿','􂠁􀅸c􏿿','􂜁􀅸c􏿿','􂘁􀅸c􏿿','􂤁􀅸c􏿿','􂤁􀄝c􏿿']),
    'C' : (4, ['􂠁􀄃c􏿿','􂤁􀄃c􏿿','􂜁􀄃c􏿿','􂘁􀄃c􏿿']),
    'd' : (4, ['􂠁􀄞d􏿿','􂤁􀄞d􏿿','􂜁􀄞d􏿿','􂘁􀄞d􏿿']),
    'D' : (4, ['􂤁􀄄d􏿿','􂠁􀄄d􏿿','􂜁􀄄d􏿿','􂘁􀄄d􏿿']),
    'e' : (4, ['􂜁􀄟e􏿿','􂠁􀄟e􏿿','􂤁􀄟e􏿿','􂘁􀄟e􏿿']),
    'E' : (4, ['􂤁􀄅e􏿿','􂠁􀄅e􏿿','􂜁􀄅e􏿿','􂘁􀄅e􏿿']),
    'f' : (4, ['􂤁􀄠f􏿿','􂠁􀄠f􏿿','􂜁􀄠f􏿿','􂘁􀄠f􏿿']),
    'F' : (4, ['􂤁􀄆f􏿿','􂠁􀄆f􏿿','􂜁􀄆f􏿿','􂘁􀄆f􏿿']),
    'g' : (4, ['􂠁􀄡g􏿿','􂤁􀄡g􏿿','􂜁􀄡g􏿿','􂘁􀄡g􏿿']),
    'G' : (4, ['􂜁􀄇g􏿿','􂤁􀄇g􏿿','􂠁􀄇g􏿿','􂘁􀄇g􏿿']),
    'h' : (4, ['􂠁􀄢h􏿿','􂜁􀄢h􏿿','􂤁􀄢h􏿿','􂘁􀄢h􏿿']),
    'H' : (4, ['􂤁􀄈h􏿿','􂘁􀄈h􏿿','􂠁􀄈h􏿿','􂜁􀄈h􏿿']),
    'i' : (4, ['􂠁􀄣i􏿿','􂜁􀄣i􏿿','􂤁􀄣i􏿿','􂘁􀄣i􏿿']),
    'I' : (3, ['􂜁􀄉i􏿿','􂘁􀄉i􏿿','􂤁􀄉i􏿿']),
    'j' : (4, ['􂤁􀄤j􏿿','􂠁􀄤j􏿿','􂜁􀄤j􏿿','􂘁􀄤j􏿿']),
    'J' : (4, ['􂤁􀄊j􏿿','􂠁􀄊j􏿿','􂜁􀄊j􏿿','􂘁􀄊j􏿿']),
    'k' : (4, ['􂠁􀄥k􏿿','􂤁􀄥k􏿿','􂜁􀄥k􏿿','􂘁􀄥k􏿿']),
    'K' : (4, ['􂤁􀄋k􏿿','􂘁􀄋k􏿿','􂜁􀄋k􏿿','􂠁􀄋k􏿿']),
    'l' : (8, ['􂠁􀅙l􏿿','􂠁􀄦l􏿿','􂜁􀄦l􏿿','􂜁􀅙l􏿿','􂘁􀄦l􏿿','􂤁􀅙l􏿿','􂘁􀅙l􏿿','􂤁􀄦l􏿿']),
    'L' : (4, ['􂜁􀄌l􏿿','􂘁􀄌l􏿿','􂤁􀄌l􏿿','􂠁􀄌l􏿿']),
    'm' : (4, ['􂠁􀄧m􏿿','􂜁􀄧m􏿿','􂤁􀄧m􏿿','􂘁􀄧m􏿿']),
    'M' : (4, ['􂤁􀄍m􏿿','􂠁􀄍m􏿿','􂜁􀄍m􏿿','􂘁􀄍m􏿿']),
    'n' : (4, ['􂠁􀄨n􏿿','􂤁􀄨n􏿿','􂜁􀄨n􏿿','􂘁􀄨n􏿿']),
    'N' : (4, ['􂤁􀄎n􏿿','􂜁􀄎n􏿿','􂘁􀄎n􏿿','􂠁􀄎n􏿿']),
    'o' : (10, ['􂠁􀄩o􏿿','􂤁􀄩o􏿿','􂠁􀆒o􏿿','􂘁􀅯o􏿿','􂘁􀅮o􏿿','􂘁􀅭o􏿿','􂜁􀄩o􏿿','􂠁􀆐o􏿿','􂘁􀆐o􏿿','􂘁􀄩o􏿿']),
    'O' : (5, ['􂘁􀆒o􏿿','􂠁􀄏o􏿿','􂘁􀄏o􏿿','􂤁􀄏o􏿿','􂜁􀄏o􏿿']),
    'p' : (8, ['􂘁􀄪p􏿿','􂜁􀄪p􏿿','􂠁􀄪p􏿿','􂤁􀄪p􏿿','􂜁􀅹p􏿿','􂘁􀅺p􏿿','􂤁􀅹p􏿿','􂠁􀅹p􏿿']),
    'P' : (4, ['􂜁􀄐p􏿿','􂤁􀄐p􏿿','􂘁􀄐p􏿿','􂠁􀄐p􏿿']),
    'q' : (4, ['􂤁􀄫q􏿿','􂠁􀄫q􏿿','􂜁􀄫q􏿿','􂘁􀄫q􏿿']),
    'Q' : (4, ['􂠁􀄑q􏿿','􂤁􀄑q􏿿','􂜁􀄑q􏿿','􂘁􀄑q􏿿']),
    'r' : (4, ['􂤁􀄬r􏿿','􂜁􀄬r􏿿','􂠁􀄬r􏿿','􂘁􀄬r􏿿']),
    'R' : (8, ['􂠁􀄒r􏿿','􂜁􀅺r􏿿','􂠁􀅺r􏿿','􂤁􀅺r􏿿','􂤁􀄒r􏿿','􂜁􀄒r􏿿','􂘁􀅹r􏿿','􂘁􀄒r􏿿']),
    's' : (4, ['􂤁􀄭s􏿿','􂠁􀄭s􏿿','􂜁􀄭s􏿿','􂘁􀄭s􏿿']),
    'S' : (4, ['􂜁􀄓s􏿿','􂤁􀄓s􏿿','􂠁􀄓s􏿿','􂘁􀄓s􏿿']),
    't' : (4, ['􂠁􀄮t􏿿','􂜁􀄮t􏿿','􂘁􀄮t􏿿','􂤁􀄮t􏿿']),
    'T' : (4, ['􂜁􀄔t􏿿','􂘁􀄔t􏿿','􂤁􀄔t􏿿','􂠁􀄔t􏿿']),
    'u' : (4, ['􂘁􀄯u􏿿','􂜁􀄯u􏿿','􂤁􀄯u􏿿','􂠁􀄯u􏿿']),
    'U' : (4, ['􂤁􀄕u􏿿','􂠁􀄕u􏿿','􂜁􀄕u􏿿','􂘁􀄕u􏿿']),
    'v' : (4, ['􂠁􀄰v􏿿','􂤁􀄰v􏿿','􂜁􀄰v􏿿','􂘁􀄰v􏿿']),
    'V' : (4, ['􂤁􀄖v􏿿','􂜁􀄖v􏿿','􂘁􀄖v􏿿','􂠁􀄖v􏿿']),
    'w' : (4, ['􂤁􀄱w􏿿','􂠁􀄱w􏿿','􂜁􀄱w􏿿','􂘁􀄱w􏿿']),
    'W' : (4, ['􂤁􀄗w􏿿','􂜁􀄗w􏿿','􂠁􀄗w􏿿','􂘁􀄗w􏿿']),
    'x' : (5, ['􂠁􀄲x􏿿','􂤁􀄲x􏿿','􂠁􀄘x􏿿','􂜁􀄲x􏿿','􂘁􀄲x􏿿']),
    'X' : (3, ['􂤁􀄘x􏿿','􂜁􀄘x􏿿','􂘁􀄘x􏿿']),
    'y' : (4, ['􂤁􀄳y􏿿','􂠁􀄳y􏿿','􂜁􀄳y􏿿','􂘁􀄳y􏿿']),
    'Y' : (4, ['􂤁􀄙y􏿿','􂠁􀄙y􏿿','􂜁􀄙y􏿿','􂘁􀄙y􏿿']),
    'z' : (4, ['􂤁􀄴z􏿿','􂠁􀄴z􏿿','􂘁􀄴z􏿿','􂜁􀄴z􏿿']),
    'Z' : (4, ['􂠁􀄚z􏿿','􂤁􀄚z􏿿','􂜁􀄚z􏿿','􂘁􀄚z􏿿']),
    '?' : (4, ['􂠁􀅤?􏿿','􂤁􀅤?􏿿','􂜁􀅤?􏿿','􂠁􀅤?􏿿']),#, '􀔃􀄚???􏿿', '􀨁􀅴???􏿿']),
    '!' : (4, ['􂠁􀅃!􏿿','􂤁􀅃!􏿿','􂜁􀅃!􏿿','􂘁􀅃!􏿿']),#, '􀔃􀅊!!!􏿿', '􀄃􀆅eh?!􏿿']),
    '.' : (9, ['􂤁􀅱.􏿿','􂤁􀅞.􏿿','􂠁􀅱.􏿿','􂠁􀅞.􏿿','􂜁􀅞.􏿿','􂜁􀅱.􏿿','􂠁􀅬.􏿿','􂜁􀅬.􏿿','􂘁􀅱.􏿿']),
    ',' : (7, ['􂜁􀅝,􏿿','􂠁􀅝,􏿿','􂤁􀅝,􏿿','􂤁􀅶,􏿿','􂠁􀅶,􏿿','􂘁􀅶,􏿿','􂜁􀅶,􏿿']),
    "'" : (16, ["􂘁􀅰'􏿿","􂤁􀅰'􏿿","􂠁􀅰'􏿿","􂤁􀅂'􏿿","􂤁􀅛'􏿿","􂠁􀅛'􏿿","􂠁􀅁'􏿿","􂠁􀅂'􏿿","􂜁􀅰'􏿿","􂤁􀅁'􏿿","􂘁􀅁'􏿿","􂘁􀅂'􏿿","􂘁􀅛'􏿿","􂜁􀅁'􏿿","􂜁􀅂'􏿿","􂜁􀅛'􏿿"]),
    '"' : (4, ["􂤁􀅾'􏿿","􂤁􀅽'􏿿","􂜁􀅾'􏿿","􂜁􀅽'􏿿"]),
    '+' : (4, ['􂤁􀅏+􏿿','􂠁􀅏+􏿿','􂜁􀅏+􏿿','􂘁􀅏+􏿿']),
    '-' : (8, ['􂤁􀅧-􏿿','􂤁􀅦-􏿿','􂠁􀅧-􏿿','􂠁􀅦-􏿿','􂘁􀅦-􏿿','􂜁􀅧-􏿿','􂜁􀅦-􏿿','􂘁􀅧-􏿿']),
    '_' : (3, ['􂠁􀅥_􏿿','􂤁􀅥_􏿿','􂘁􀅥_􏿿']),
    ':' : (4, ['􂜁􀅜:􏿿','􂠁􀅜:􏿿','􂤁􀅜:􏿿','􂘁􀅜:􏿿']),
    ';' : (4, ['􂤁􀅚;􏿿','􂠁􀅚;􏿿','􂜁􀅚;􏿿','􂘁􀅚;􏿿']),
    '(' : (4, ['􂤁􀅍(􏿿','􂠁􀅍(􏿿','􂘁􀅍(􏿿','􂜁􀅍(􏿿']),
    ')' : (4, ['􂤁􀅎)􏿿','􂠁􀅎)􏿿','􂜁􀅎)􏿿','􂘁􀅎)􏿿']),
    '=' : (4, ['􂤁􀅑=􏿿','􂠁􀅑=􏿿','􂜁􀅑=􏿿','􂘁􀅑=􏿿']),
    '$' : (6, ['􂤁􀅆$􏿿','􂠁􀅆$􏿿','􂜁􀅆$􏿿','􂘁􀅆$􏿿','􀠁􀅳$􏿿','􀔃􀆝$􏿿']),
    '&' : (5, ['􀰂􀇿&􏿿','􂤁􀅊&􏿿','􂠁􀅊&􏿿','􂜁􀅊&􏿿','􂘁􀅊&􏿿']),
    '~' : (8, ['􂤁􀅀~􏿿','􂤁􀄿~􏿿','􂠁􀅀~􏿿','􂠁􀄿~􏿿','􂜁􀅀~􏿿','􂜁􀄿~􏿿','􂘁􀅀~􏿿','􂘁􀄿~􏿿']),
    '[' : (16, ['􂤁􀅔[􏿿','􂤁􀅒[􏿿','􂠁􀅴[􏿿','􂠁􀅲[􏿿','􂠁􀅔[􏿿','􂠁􀅒[􏿿','􂘁􀅒[􏿿','􂘁􀅔[􏿿','􂜁􀅔[􏿿','􂜁􀅒[􏿿','􂤁􀅴[􏿿','􂤁􀅲[􏿿','􂘁􀅲[􏿿','􂘁􀅴[􏿿','􂜁􀅴[􏿿','􂜁􀅲[􏿿']),
    ']' : (13, ['􂠁􀅵]􏿿','􂠁􀅳]􏿿','􂤁􀅕]􏿿','􂤁􀅓]􏿿','􂠁􀅕]􏿿','􂠁􀅓]􏿿','􂜁􀅕]􏿿','􂘁􀅕]􏿿','􂘁􀅓]􏿿','􂤁􀅳]􏿿','􂤁􀅵]􏿿','􂘁􀅵]􏿿','􂘁􀅳]􏿿']),
    '>' : (4, ['􂤁􀅡>􏿿','􂜁􀅡>􏿿','􂘁􀅡>􏿿','􂠁􀅡>􏿿']),
    '<' : (4, ['􂜁􀅠<􏿿','􂠁􀅠<􏿿','􂤁􀅠<􏿿','􂘁􀅠<􏿿']),
    '/' : (4, ['􂤁􀅟/􏿿','􂜁􀅟/􏿿','􂠁􀅟/􏿿','􂘁􀅟/􏿿']),
    '\\' : (4, ['􂠁􀅖/􏿿','􂜁􀅖/􏿿','􂤁􀅖/􏿿','􂘁􀅖/􏿿']),
    '{' : (4, ['􂤁􀅗{􏿿','􂠁􀅗{􏿿','􂜁􀅗{􏿿','􂘁􀅗{􏿿']),
    '%' : (4, ['􂤁􀅇%􏿿','􂠁􀅇%􏿿','􂜁􀅇%􏿿','􂘁􀅇%􏿿']),
    '}' : (4, ['􂤁􀅘}􏿿','􂠁􀅘}􏿿','􂜁􀅘}􏿿','􂘁􀅘}􏿿'])
}

emojiDictReverse = {}
for k, v in emojiDict.iteritems():
    y = v[1]
    emojiDictReverse.update({z:k for z in y})

emojiDict2 = {
    '#' : (1, ['#⃣']),
    '*' : (1, ['*⃣']),
    '0' : (1, ['0⃣']),
    '1' : (1, ['1⃣']),
    '2' : (1, ['2⃣']),
    '3' : (1, ['3⃣']),
    '4' : (1, ['4⃣']),
    '5' : (1, ['5⃣']),
    '6' : (1, ['6⃣']),
    '7' : (1, ['7⃣']),
    '8' : (1, ['8⃣']),
    '9' : (1, ['9⃣']),
    'A' : (1, ['🅰']),
    'B' : (1, ['🅱']),
    'C' : (1, ['🔝']),
    #'i' : (1, ['ℹ']),
    #'M' : (1, ['Ⓜ']),
    'o' : (2, ['⚪','⚫']),
    'O' : (7, ['🔵','🔴','🔘','⭕','🌑','🌕','🌚']),
    'P' : (1, ['🅿']),
    #'R' : (1, ['🔝']),
    'x' : (1, ['🅿']),
    'X' : (2, ['❌', '❎']),
    '!' : (2, ['❗','❕']),
    '?' : (2, ['❔', '❓']),
    '-' : (1, ['➖']),
    '+' : (1, ['➕'])
}

for k, v in emojiDict2.iteritems():
    y = v[1]
    emojiDictReverse.update({z:k for z in y})

emojiList = [
    ('10', '🔟'),
    ('100', '💯'),
    ('18', '🔞'),
    ('!!!', '􀔃􀄙!!!􏿿'),
    ('!!', '‼'),
    ('???', '􀠁􀅱???􏿿')
]

emojiDictReverse.update({x[1]:x[0] for x in emojiList})
    
emojiList2 = [
    (compile('(^|[^a-zA-Z\d\s])wc($|[^a-zA-Z\d\s])', IGNORECASE), '🚾'),
    (compile('(^|[^a-zA-Z\d\s])atm($|[^a-zA-Z\d\s])', IGNORECASE), '🏧'),
    (compile('(^|[^a-zA-Z\d\s])back($|[^a-zA-Z\d\s])', IGNORECASE), '🔙'),
    (compile('(^|[^a-zA-Z\d\s])and($|[^a-zA-Z\d\s])', IGNORECASE), '🔚'),
    (compile('(^|[^a-zA-Z\d\s])on($|[^a-zA-Z\d\s])', IGNORECASE), '🔛'),
    (compile('(^|[^a-zA-Z\d\s])soon($|[^a-zA-Z\d\s])', IGNORECASE), '🔜'),
    (compile('(^|[^a-zA-Z\d\s])top($|[^a-zA-Z\d\s])', IGNORECASE), '🔝'),
    (compile('(^|[^a-zA-Z\d\s])tm($|[^a-zA-Z\d\s])', IGNORECASE), '™'),
    (compile('(^|[^a-zA-Z\d\s])off($|[^a-zA-Z\d\s])', IGNORECASE), '📴'),
    (compile('(^|[^a-zA-Z\d\s])abc($|[^a-zA-Z\d\s])', IGNORECASE), '🔤'),
    (compile('(^|[^a-zA-Z\d\s])cool($|[^a-zA-Z\d\s])', IGNORECASE), '🆒'),
    (compile('(^|[^a-zA-Z\d\s])free($|[^a-zA-Z\d\s])', IGNORECASE), '🆓'),
    (compile('(^|[^a-zA-Z\d\s])id($|[^a-zA-Z\d\s])', IGNORECASE), '🆔'),
    (compile('(^|[^a-zA-Z\d\s])ok($|[^a-zA-Z\d\s])', IGNORECASE), '🆗'),
    (compile('(^|[^a-zA-Z\d\s])sos($|[^a-zA-Z\d\s])', IGNORECASE), '🆘'),
    (compile('(^|[^a-zA-Z\d\s])up($|[^a-zA-Z\d\s])', IGNORECASE), '🆙'),
    (compile('(^|[^a-zA-Z\d\s])vs($|[^a-zA-Z\d\s])', IGNORECASE), '🆚'),
    (compile('(^|[^a-zA-Z\d\s])new($|[^a-zA-Z\d\s])', IGNORECASE), '🆕'),
    (compile('ab', IGNORECASE), '🆎'),
    (compile('cl', IGNORECASE), '🆑'),
    (compile('ng', IGNORECASE), '🆖')
]

emojiList3 = [
    (compile('(^|[^a-zA-Z\d\s\<])\<\<($|[^a-zA-Z\d\s\<])', IGNORECASE), (4, ['􂤁􀅢<􏿿','􂠁􀅢<􏿿','􂜁􀅢<􏿿','􂘁􀅢<􏿿'])),
    (compile('(^|[^a-zA-Z\d\s\>])\>\>($|[^a-zA-Z\d\s\>])', IGNORECASE), (4, ['􂤁􀅣>􏿿','􂠁􀅣>􏿿','􂜁􀅣>􏿿','􂘁􀅣>􏿿'])),
    (compile('(^|[^a-zA-Z\d\s])\-\>($|[^a-zA-Z\d\s])', IGNORECASE), (3, ['􂤁􀆎>􏿿','􂘁􀆎>􏿿','􂠁􀆎<􏿿', '➡'])),
    (compile('(^|[^a-zA-Z\d\s])\<\-($|[^a-zA-Z\d\s])', IGNORECASE), (3, ['􂤁􀆎>􏿿','􂘁􀆎>􏿿','􂠁􀆎<􏿿', '⬅'])),
    (compile('(^|[^a-zA-Z\d\s])\<\-\>($|[^a-zA-Z\d\s])', IGNORECASE), (1, ['↔']))
]
emojiList4 = [
    ('!?', (2, ['⁉', '􀔃􀅋!?􏿿']))
]

for emoji in emojiList4:
    x = emoji[0]
    y = emoji[1][1]
    emojiDictReverse.update({z:x for z in y})

def Emoji(message, options, text=''):
    if IsEmpty(text):
        message.ReplyText("Please specify 'text' argument.")
        return
    
    for emoji in emojiList:
        text = text.replace(emoji[0], emoji[1])
    
    for emoji in emojiList4:
        e1 = emoji[1]
        i = randint(0, e1[0]-1)
        text = text.replace(emoji[0], e1[1][i])
        
    #for emoji in emojiList2:
    #    text = sub(emoji[0], emoji[1], text)
        
    #for emoji in emojiList3:
    #    regex = emoji[0]
    #    r = emoji[1]
    #    replace = r[1][randint(0, r[0]-1)]
    #    text = sub(regex, replace, text)

    l = []
    
    for c in text:
        if c in emojiDict:
            if c in emojiDict2:
                t1 = emojiDict[c]
                t2 = emojiDict2[c]
                n1 = t1[0]
                n = n1 + t2[0]
                r = randint(0, n-1)
                if r < n1:
                    l.append(t1[1][r])
                else:
                    l.append(t2[1][r-n1])
            else:
                t = emojiDict[c]
                l.append(t[1][randint(0, t[0]-1)])
        elif c in emojiDict2:
            t = emojiDict2[c]
            l.append(t[1][randint(0, t[0]-1)])
        else:
            l.append(c)
    ret = "".join(l)
    return CommandResult(type=CommandResultType.done, texts=[ret])

emojiCmd = Command(
    'emoji',
    Emoji,
    desc='EmoBi'
)

AddReverseDict(emojiDictReverse, [4, 1, 2])
